name: Release Insiders

on:
  push:
    branches:
      - develop

env:
  NODE_VERSION: '20'
  RELEASE_CHANNEL: insiders
  VERSION: 0.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Build mytril
        run: npm run build

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mytril-build
          path: |
            dist
            .svelte-kit

  lint:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Use linter
        run: npm run lint

  vitest:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Use Vitest
        run: npm run test

  prerelease:
    runs-on: ubuntu-latest
    needs: ['vitest', 'lint']
    timeout-minutes: 1
    permissions:
      contents: write
    outputs:
      version_release: ${{ steps.set_version.outputs.version_release }}
      sha_short: ${{ steps.get_sha_version.outputs.version_release }}

    steps:
      - uses: actions/checkout@v4

      - name: Resolve version
        id: get_sha_version
        run: |
          echo "sha_version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Generate version
        id: set_version
        run: |
          sha_version="${{ steps.get_sha_version.outputs.sha_version }}"
          echo "version_release=${VERSION}-${RELEASE_CHANNEL}.${sha_version}" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: prerelease
    env:
      version_release: ${{ needs.prerelease.outputs.version_release }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: mytril-build
          path: |
            dist
            .svelte-kit

      - name: version to mytril insidier
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git branch --show-current
          npm version ${{ env.version_release }} -f

      - name: Authenticate to NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Verify files
        run: npm pack --dry-run

      - name: Publish to NPM
        run: |
          echo "Publishing version ${{ env.version_release }}"
          npm publish --tag insiders
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
